.responsive-container {
  transition: max-width 0.2s cubic-bezier(0.5, 0, 0.3, 1);
  width: 100%;
  &.isResizing {
    transition-duration: 0s;
  }
  height: calc(100% - 1rem);
  margin: 0 auto;
  min-height: 300px;
  background-color: rgba(var(--c-4), 0.07);
  border: solid rgba(var(--c-2), 0.42);
  border-width: 1px 0 0;
  position: relative;
  box-shadow: var(--inset-shadow);
  .resize-handle {
    --rounding: 7px;
    --width: 15px;
    --knob-width: 6px;
    --knob-length: 200px;
    position: absolute;
    border: solid rgba(var(--c-2), 0.12);
    box-shadow: var(--menu-shadow);
    &:before {
      content: "";
      z-index: 1;
      position: absolute;
      top: 50%;
      left: 50%;
      border-radius: 2px;
      background-color: rgb(var(--c-1));
      box-shadow: var(--tiny-shadow);
      border: 1px solid rgba(var(--c-4), 0.12);
      transform: translate(-50%, -50%);
    }
    &:hover:before {
      background-color: rgba(var(--c-3), 1);
    }
    &.side-right,
    &.side-left {
      cursor: col-resize;
      height: 100%;
      width: var(--width);
      top: -1px;
      border-width: 1px 0;
      background: repeating-linear-gradient(
        90deg,
        rgba(var(--c-1), 1),
        rgba(var(--c-1), 1) 1px,
        rgba(var(--c-2), 0.35) 1px,
        rgba(var(--c-2), 0.35) 2px
      );
      .dark-mode & {
        background: repeating-linear-gradient(
          90deg,
          rgba(var(--c-4), 0.35),
          rgba(var(--c-4), 0.35) 1px,
          rgba(var(--c-2), 0.35) 1px,
          rgba(var(--c-2), 0.35) 2px
        );
      }
      &:before {
        height: var(--knob-length);
        width: var(--knob-width);
      }
    }
    &.side-left {
      right: 100%;
      border-left-width: 1px;
      border-radius: var(--rounding) 0 0 var(--rounding);
    }
    &.side-right {
      left: 100%;
      border-right-width: 1px;
      border-radius: 0 var(--rounding) var(--rounding) 0;
    }
    &.side-bottom {
      cursor: row-resize;
      height: var(--width);
      top: 100%;
      width: 100%;
      left: -1px;
      border-width: 0 1px 1px;
      background: repeating-linear-gradient(
        0deg,
        rgb(var(--c-1)),
        rgb(var(--c-1)) 1px,
        rgba(var(--c-2), 0.35) 1px,
        rgba(var(--c-2), 0.35) 2px
      );
      .dark-mode & {
        background: repeating-linear-gradient(
          0deg,
          rgba(var(--c-4), 0.35),
          rgba(var(--c-4), 0.35) 1px,
          rgba(var(--c-2), 0.35) 1px,
          rgba(var(--c-2), 0.35) 2px
        );
      }
      border-radius: 0 0 var(--rounding) var(--rounding);
      &:before {
        width: var(--knob-length);
        height: var(--knob-width);
      }
    }
  }
  .handle-left,
  .handle-right {
    z-index: 1;
    position: absolute;
    height: 200px;
    top: 50%;
    border-radius: 3px;
    cursor: move;
    background-color: rgba(var(--c-4), 0.65);
    box-shadow: var(--tiny-shadow);
    border: 1px solid rgba(var(--c-4), 1);
    width: 10px;
    &:hover {
      background-color: rgb(var(--c-4));
    }
  }
  .handle-left {
    transform: translateY(-50%);
    left: -12px;
  }
  .handle-right {
    transform: translateY(-50%);
    right: -12px;
  }
}
.dashboard-section {
  overflow: hidden;
  position: relative;
  background-image: repeating-linear-gradient(
      90deg,
      #bbb,
      transparent 1px,
      transparent 100%,
      #bbb calc(100% + 1px)
    ),
    repeating-linear-gradient(
      0deg,
      #bbb,
      transparent 1px,
      transparent 100%,
      #bbb calc(100% + 1px)
    ),
    linear-gradient(
      to top,
      rgba(var(--c-5), 0.65) 0,
      rgb(var(--c-5), 0.65) 100%
    );
  background-size: 100% 100%;
  height: 100%;
  display: grid;
  &.dragging {
    cursor: grabbing;
  }
  @for $w from 1 through 24 {
    &.grid-w#{$w} {
      grid-template-columns: repeat(#{$w}, 1fr);
    }
    @for $h from 1 through 24 {
      &.grid-w#{$w}.grid-h#{$h} {
        grid-template-rows: repeat(#{$h}, 1fr);
        background-size: calc(100% / #{$w}) calc(100% / #{$h});
      }
    }
  }
  .component-handle {
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: move;
    background-color: transparent;
    &:hover {
      z-index: 1;
    }
    &.is-fixed {
      background-image: linear-gradient(
          to right,
          rgba(var(--c-3), 0.07),
          rgba(var(--c-3), 0.07)
        ),
        linear-gradient(to right, rgb(var(--c-1)), rgb(var(--c-1)));
    }
    position: relative;
    .component-resize-handle {
      position: absolute;
      right: 0;
      bottom: 0;
      width: 1rem;
      height: 1rem;
      cursor: nwse-resize;
      background-image: repeating-linear-gradient(
        135deg,
        #777,
        transparent 1px,
        transparent 2px,
        #777 3px
      );
      clip-path: polygon(0 100%, 100% 0, 100% 100%, 0 100%);
    }
    &.drag-indicator {
      border: 1px dotted red;
    }
    .resize-actions {
      position: absolute;
      height: 1.8rem;
      width: auto;
      bottom: 0.5rem;
      display: none;
      justify-content: center;
      align-items: center;
      cursor: pointer;
      .generic-icon {
        width: 1.8rem;
        padding: 0 0.15rem;
        height: 1.8rem;
        display: flex;
        align-items: center;
      }
    }
    &:hover {
      .resize-actions {
        background-color: rgb(var(--c-5));
        display: flex;
        .gamma-icon:hover {
          border: 1px solid rgb(var(--c-3));
          cursor: pointer;
        }
      }
    }
  }
  .decorator {
    position: absolute;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: rgba(var(--c-3), 0.07);
    border: 1px dotted rgb(var(--c-3));
    z-index: 10;
    pointer-events: none;
    transition: all 0.3s cubic-bezier(0.5, 0, 0.3, 1);
  }
}
.report-editor {
  display: flex;
  flex-direction: column;
  .tab-panel {
    flex-grow: 1;
  }
}
.tab-panel.editor > div {
  height: 100%;
  .jsoneditor {
    border-radius: 0;
    border: none;
  }
}
.section-editor {
  width: 100%;
  padding-bottom: 6px;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-top: -1rem;
  .grid-resizer {
    display: flex;
    align-items: center;
    > * {
      margin: 0 0.25rem;
    }
  }
  input:not(#_) {
    margin: 0;
  }
  .generic-icon {
    width: 1rem;
  }
  input {
    width: 72px;
    text-align: right;
    border: 1px solid #ccc;
    height: calc(1.5rem + 1px);
    background-color: rgba(var(--c-5), 0.42);
    margin-right: -1px;
    &:hover {
      background-color: rgb(var(--c-1));
    }
  }
}
